<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="InkOverlayEventSelectionChanging" xml:space="preserve">
    <value>Occurs when the selection is about to change.</value>
  </data>
  <data name="InkOverlayEventSelectionResized" xml:space="preserve">
    <value>Occurs when the size of the current selection has changed.</value>
  </data>
  <data name="InkCollectorPropertyHandle" xml:space="preserve">
    <value>Returns or sets the handle value of the window on which ink is drawn.</value>
  </data>
  <data name="InkEditPropertyRecognizer" xml:space="preserve">
    <value>Represents the ability to process ink, or handwriting, and translate the strokes into text or gestures.</value>
  </data>
  <data name="InkEditPropertyRecognitionTimeout" xml:space="preserve">
    <value>Returns or sets the length of time, in milliseconds, between the last ink stroke collected and the beginning of text recognition.This property returns a signed 32-bit number that specifies the length of time, in milliseconds, between the last ink stroke collected and the beginning of text recognition.</value>
  </data>
  <data name="InkOverlayPropertySupportHighContrastSelectionUI" xml:space="preserve">
    <value>Returns or sets a value that specifies whether all selection UI (selection bounding box, selection handles) will be drawn in high contrast when the system is in High Contrast mode.</value>
  </data>
  <data name="InkEditPropertyDrawingAttributes" xml:space="preserve">
    <value>Represents the objects that are applied to ink when it is drawn.</value>
  </data>
  <data name="InkOverlayEventSelectionChanged" xml:space="preserve">
    <value>Occurs when the selection has finished changing.</value>
  </data>
  <data name="InkCollectorEventTabletRemoved" xml:space="preserve">
    <value>Occurs when a tablet is removed from the system.</value>
  </data>
  <data name="InkCollectorPropertyEnabled" xml:space="preserve">
    <value>Returns or sets a value that specifies whether the InkCollector or InkOverlay objects will collect pen input (in-air packets, cursor in range events, and so on).</value>
  </data>
  <data name="InkCollectorPropertyCursor" xml:space="preserve">
    <value>Sets the mouse cursor.</value>
  </data>
  <data name="InkEditPropertySelInksDisplayMode" xml:space="preserve">
    <value>Returns or sets a value that allows for toggling the display of the selection between ink and text.</value>
  </data>
  <data name="InkEditPropertyStatus" xml:space="preserve">
    <value>Returns a value that specifies whether the control is idle, collecting ink, or recognizing ink.</value>
  </data>
  <data name="InkEditEventGesture" xml:space="preserve">
    <value>Occurs when an application-specific gesture is recognized.</value>
  </data>
  <data name="InkModeInkAndGesture" xml:space="preserve">
    <value>Ink is collected and single stroke gestures are accepted.</value>
  </data>
  <data name="InkOverlayEventPainting" xml:space="preserve">
    <value>Occurs before the InkOverlay object or InkPicture control redraws itself.</value>
  </data>
  <data name="SelectionHitResult" xml:space="preserve">
    <value>Defines values that specify which part of a selection, if any, was hit during a hit test.</value>
  </data>
  <data name="InkEditPropertyFactoid" xml:space="preserve">
    <value>Defines constant string values that are used to increase recognition accuracy by providing contextual information to the recognizer.</value>
  </data>
  <data name="InkOverlayEraserModePointErase" xml:space="preserve">
    <value>Specifies that ink be erased by point.</value>
  </data>
  <data name="InkEditPropertySelInks" xml:space="preserve">
    <value>Returns or sets the array of embedded Ink objects (if displayed as ink) contained in the current selection.</value>
  </data>
  <data name="InkEditPropertyInkInsertMode" xml:space="preserve">
    <value>Returns or sets a value that specifies how ink is inserted onto the control - either as text or as ink.</value>
  </data>
  <data name="InkOverlayEditingModeDelete" xml:space="preserve">
    <value>The control is in stroke deletion mode.</value>
  </data>
  <data name="SelectionHitResultSelection" xml:space="preserve">
    <value>Selection itself was hit (no selection handle was hit).</value>
  </data>
  <data name="InkOverlayEventStrokesDeleting" xml:space="preserve">
    <value>Occurs before strokes are deleted from the Ink property.</value>
  </data>
  <data name="InkCollectorPropertyTablet" xml:space="preserve">
    <value>Represents the digitizer device of the Tablet PC that receives tablet device messages or events.</value>
  </data>
  <data name="InkModeDisabled" xml:space="preserve">
    <value>Ink collection is disabled.</value>
  </data>
  <data name="InkEditPropertyCursor" xml:space="preserve">
    <value>Represents general information about the tablet cursor.</value>
  </data>
  <data name="InkCollectorEventNewPackets" xml:space="preserve">
    <value>Occurs when the InkCollector receives packets.</value>
  </data>
  <data name="InkCollectorPropertyAutoRedraw" xml:space="preserve">
    <value>Returns or sets a value that specifies whether the InkCollector will repaint when the window is invalidated.</value>
  </data>
  <data name="InkCollectorEventInkMouseMove" xml:space="preserve">
    <value>Event which is fired when the user moves the mouse or pen.</value>
  </data>
  <data name="InkCollectorEventInkMouseDown" xml:space="preserve">
    <value>Event which is fired when the user presses a mouse button or puts the pen down.</value>
  </data>
  <data name="InkOverlayEraserMode" xml:space="preserve">
    <value>Defines values that specify the way ink is erased from the InkOverlay object.</value>
  </data>
  <data name="InkCollectorEventInkMouseWheel" xml:space="preserve">
    <value>Event which is fired when the user scrolls the mouse wheel.</value>
  </data>
  <data name="InkCollectorPropertyCollectionMode" xml:space="preserve">
    <value>Defines values that determine whether ink, gestures, or both are recognized as the user writes.</value>
  </data>
  <data name="InkOverlayEventPainted" xml:space="preserve">
    <value>Occurs when the InkOverlay object or InkPicture control has completed redrawing [a subset of] itself.</value>
  </data>
  <data name="InkOverlayEditingModeSelect" xml:space="preserve">
    <value>Use the pen to edit existing strokes.</value>
  </data>
  <data name="InkCollectorPropertyCollectingInk" xml:space="preserve">
    <value>Returns the value that specifies whether ink is currently being drawn.</value>
  </data>
  <data name="InkCollectorEventCursorInRange" xml:space="preserve">
    <value>Occurs when a cursor enters the physical detection range (proximity) of the tablet context.</value>
  </data>
  <data name="InkOverlayEventSelectionMoved" xml:space="preserve">
    <value>Occurs when the position of the current selection has changed.</value>
  </data>
  <data name="InkPicturePropertyInkEnabled" xml:space="preserve">
    <value>Returns or sets a value that specifies whether the InkPicture control will collect pen input, such as in-air packets or cursor in range events.</value>
  </data>
  <data name="InkCollectorEventNewInAirPackets" xml:space="preserve">
    <value>This event occurs when an in-air packet is seen.</value>
  </data>
  <data name="InkCollectorPropertyaAttachedControl" xml:space="preserve">
    <value>Returns or sets the control on which ink is drawn.</value>
  </data>
  <data name="InkCollectorPropertyDefaultDrawingAttributes" xml:space="preserve">
    <value>Returns or sets the default drawing attributes to use when drawing and displaying ink.</value>
  </data>
  <data name="InkEditStatusRecognizing" xml:space="preserve">
    <value>The control is recognizing ink.</value>
  </data>
  <data name="InkDisplayModeInk" xml:space="preserve">
    <value>Specifies that the selection be displayed as ink.</value>
  </data>
  <data name="InkEditStatusIdle" xml:space="preserve">
    <value>The control is idle (not collecting or recognizing ink).</value>
  </data>
  <data name="InkOverlayEventStrokesDeleted" xml:space="preserve">
    <value>Occurs after strokes have been deleted from the Ink property.</value>
  </data>
  <data name="InkInsertModeInsertAsText" xml:space="preserve">
    <value>Specifies that drawn ink should be inserted as text.</value>
  </data>
  <data name="CategoryInk" xml:space="preserve">
    <value>Ink</value>
  </data>
  <data name="InkCollectorPropertyInk" xml:space="preserve">
    <value>Returns or sets the Ink object that is associated with an InkCollector object, an InkOverlay object, or a InkPicture control.This property returns the Ink object that is associated with an InkCollector object, an InkOverlay object, or a InkPicture control.</value>
  </data>
  <data name="InkCollectorEventGesture" xml:space="preserve">
    <value>Occurs when an application-specific gesture is recognized.</value>
  </data>
  <data name="InkEditMethodSetGestureStatus" xml:space="preserve">
    <value>Specifies (sets) the interest of the object/control in a given gesture.</value>
  </data>
  <data name="InkOverlayPropertyAttachMode" xml:space="preserve">
    <value>Returns or sets the value that specifies whether the object is attached behind or in front of the given window.</value>
  </data>
  <data name="SelectionHitResultSouth" xml:space="preserve">
    <value>South side sizing handle was hit.</value>
  </data>
  <data name="SelectionHitResultNorth" xml:space="preserve">
    <value>North side sizing handle was hit.</value>
  </data>
  <data name="InkOverlayAttachModeBehind" xml:space="preserve">
    <value>Attach the new InkOverlay object behind the active window.</value>
  </data>
  <data name="CategoryAppearance" xml:space="preserve">
    <value>Appearance</value>
  </data>
  <data name="InkOverlayAttachMode" xml:space="preserve">
    <value>Defines values that specify where to attach the new InkOverlay object - behind or in front of the active layer.</value>
  </data>
  <data name="InkOverlayEventSelectionResizing" xml:space="preserve">
    <value>Occurs when the size of the current selection is about to change.</value>
  </data>
  <data name="InkCollectorPropertyDesiredPacketDescription" xml:space="preserve">
    <value>Returns or sets the desired packet description of the InkCollector.</value>
  </data>
  <data name="InkOverlayEraserModeStrokeErase" xml:space="preserve">
    <value>Specifies that ink be erased by stroke.</value>
  </data>
  <data name="InkOverlayPropertyEraserMode" xml:space="preserve">
    <value>Returns or sets the value that specifies whether ink is erased by stroke or by point.</value>
  </data>
  <data name="InkCollectorPropertyDynamicRendering" xml:space="preserve">
    <value>Returns or sets the value that specifies whether ink is rendered as it is drawn.</value>
  </data>
  <data name="InkEditPropertyUseMouseForInput" xml:space="preserve">
    <value>Returns or sets a value that indicates whether the mouse is used as an input device.</value>
  </data>
  <data name="InkCollectorPropertyMarginY" xml:space="preserve">
    <value>Returns or sets the y-axis margin around the window rectangle, in screen coordinates.</value>
  </data>
  <data name="InkCollectorPropertyMarginX" xml:space="preserve">
    <value>Returns or sets the x-axis margin around the window rectangle, in screen coordinates.</value>
  </data>
  <data name="InkEditStatusCollecting" xml:space="preserve">
    <value>The control is collecting ink.</value>
  </data>
  <data name="InkModeInk" xml:space="preserve">
    <value>Only ink is collected, creating a stroke.</value>
  </data>
  <data name="InkCollectorEventCursorDown" xml:space="preserve">
    <value>Occurs when the cursor tip contacts the digitizing tablet surface.</value>
  </data>
  <data name="InkOverlayEditingMode" xml:space="preserve">
    <value>Defines values that specify the behavior mode of the InkOverlay object.</value>
  </data>
  <data name="SelectionHitResultNorthwest" xml:space="preserve">
    <value>Northwest corner sizing handle was hit.</value>
  </data>
  <data name="SelectionHitResultNortheast" xml:space="preserve">
    <value>Northeast corner sizing handle was hit.</value>
  </data>
  <data name="InkCollectorPropertyRenderer" xml:space="preserve">
    <value>Represents the management of mappings from ink to the display window.</value>
  </data>
  <data name="InkCollectorEventInkMouseUp" xml:space="preserve">
    <value>Event which is fired when the user releases a mouse button or lifts the pen. </value>
  </data>
  <data name="InkOverlayEventSelectionMoving" xml:space="preserve">
    <value>Occurs when the position of the current selection is about to change.</value>
  </data>
  <data name="InkCollectorPropertySupportHighContrastInk" xml:space="preserve">
    <value>Returns or sets a value that specifies whether ink will be rendered as just one color, Color = COLOR_WINDOWTEXT (as detected by a call to SystemParametersInfo(), specifying SPI_GETHIGHCONTRAST), when the system is in High Contrast mode.</value>
  </data>
  <data name="InkEditPropertyInkMode" xml:space="preserve">
    <value>Defines values that specify the collection mode settings for drawn ink - whether ink collection is disabled, whether ink is collected, or whether ink and gestures are being collected.</value>
  </data>
  <data name="InkOverlayPropertySelection" xml:space="preserve">
    <value>Returns the collection of strokes that are currently selected inside the control.This property returns the collection of strokes that are currently selected inside the control. The default value is Null.</value>
  </data>
  <data name="InkOverlayPropertyEraserWidth" xml:space="preserve">
    <value>Returns or sets the value that specifies width of the eraser pen tip.</value>
  </data>
  <data name="InkOverlayEditingModeInk" xml:space="preserve">
    <value>The control is in ink collection mode.</value>
  </data>
  <data name="InkCollectorEventCursorOutOfRange" xml:space="preserve">
    <value>Occurs when the cursor leaves the physical detection range (proximity) of the tablet context.</value>
  </data>
  <data name="InkEditMethodGetGestureStatus" xml:space="preserve">
    <value>Specifies (gets) the interest of the object/control in a given gesture.</value>
  </data>
  <data name="InkCollectorPropertyCursors" xml:space="preserve">
    <value>Contains the Cursor objects that represent general information about a tablet cursor.</value>
  </data>
  <data name="InkEditMethodRecognize" xml:space="preserve">
    <value>Specifies that recognition should occur.</value>
  </data>
  <data name="SelectionHitResultSoutheast" xml:space="preserve">
    <value>Southeast corner sizing handle was hit.</value>
  </data>
  <data name="SelectionHitResultSouthwest" xml:space="preserve">
    <value>Southwest corner sizing handle was hit.</value>
  </data>
  <data name="InkCollectorEventStroke" xml:space="preserve">
    <value>Occurs when the user draws a new stroke on any tablet.</value>
  </data>
  <data name="InkOverlayAttachModeInFront" xml:space="preserve">
    <value>Attach the new InkOverlay object in front of the active window.</value>
  </data>
  <data name="InkCollectorEventCursorButtonDown" xml:space="preserve">
    <value>Occurs when the InkCollector detects a cursor button that is down.</value>
  </data>
  <data name="InkCollectorEventInkDoubleClick" xml:space="preserve">
    <value>Event which is fired when the user double-clicks a mouse button or double-taps the pen.</value>
  </data>
  <data name="InkCollectorEventCursorButtonUp" xml:space="preserve">
    <value>Occurs when the InkCollector detects a cursor button that is up.</value>
  </data>
  <data name="InkDisplayModeText" xml:space="preserve">
    <value>Specifies that the selection be displayed as text.</value>
  </data>
  <data name="InkOverlayPropertyEditingMode" xml:space="preserve">
    <value>Returns or sets a value that specifies whether the object/control is in ink mode, deletion mode, or selecting/editing mode.</value>
  </data>
  <data name="SelectionHitResultWest" xml:space="preserve">
    <value>West side sizing handle was hit.</value>
  </data>
  <data name="SelectionHitResultNone" xml:space="preserve">
    <value>No part of the selection was hit.</value>
  </data>
  <data name="SelectionHitResultEast" xml:space="preserve">
    <value>East side sizing handle was hit.</value>
  </data>
  <data name="InkCollectorEventTabletAdded" xml:space="preserve">
    <value>Occurs when a tablet is added to the system.</value>
  </data>
  <data name="InkPicturePropertyCursor" xml:space="preserve">
    <value>The cursor that appears when the mouse passes over the control.</value>
  </data>
  <data name="InkCollectorEventSystemGesture" xml:space="preserve">
    <value>Defines values that set the interest in a set of operating system-specific gestures.</value>
  </data>
  <data name="InkInsertModeInsertAsInk" xml:space="preserve">
    <value>Represents the collected strokes of ink within an ink space.</value>
  </data>
  <data name="InkEditEventStroke" xml:space="preserve">
    <value>Occurs when the user draws a new stroke on any tablet.</value>
  </data>
  <data name="InkEditEventRecognition" xml:space="preserve">
    <value>Occurs when the InkEdit control recognizes using the Recognize method.</value>
  </data>
</root>